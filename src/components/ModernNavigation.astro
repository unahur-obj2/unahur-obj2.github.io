---
// Navegación moderna con colores UNAHUR y mejor UX
import { DarkMode } from 'accessible-astro-components'
import { Image } from 'astro:assets'
import logo from '../assets/img/Obj2Logo.png'
import { PATH } from '@/paths.js'

// Iconos SVG
const menuIcon = `<svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"/></svg>`
const closeIcon = `<svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"/></svg>`
---

<nav
	class="modern-navigation sticky top-0 z-50 border-b border-gray-200 bg-white/95 backdrop-blur-md transition-all duration-300 dark:border-gray-700 dark:bg-gray-900/95">
	<div class="container mx-auto px-4">
		<div class="flex h-16 items-center justify-between">
			<!-- Logo y título -->
			<a
				href={PATH}
				class="text-decoration-none flex items-center gap-3 transition-transform duration-200 hover:scale-105">
				<div class="relative">
					<Image
						src={logo}
						alt="Objetos II Logo"
						width="47"
						height="37"
						class="rounded-lg shadow-sm"
					/>
					<div
						class="absolute -inset-1 rounded-lg bg-gradient-to-r from-unahur-primary to-unahur-secondary opacity-20">
					</div>
				</div>
				<div class="flex flex-col">
					<span class="text-lg font-bold text-gray-900 dark:text-white"
						>Objetos II</span
					>
					<span
						class="text-xs font-medium text-unahur-primary dark:text-unahur-accent"
						>UNAHUR</span
					>
				</div>
			</a>

			<!-- Menú desktop -->
			<div class="hidden items-center space-x-8 lg:flex">
				<nav aria-label="Navegación principal">
					<ul class="flex items-center space-x-6">
						<slot />
					</ul>
				</nav>

				<!-- Controles -->
				<div
					class="flex items-center space-x-4 border-l border-gray-200 pl-6 dark:border-gray-700">
					<DarkMode />
				</div>
			</div>

			<!-- Botón menú móvil -->
			<button
				id="mobile-menu-toggle"
				class="rounded-lg p-2 text-gray-600 transition-colors duration-200 hover:bg-gray-100 dark:text-gray-300 dark:hover:bg-gray-800 lg:hidden"
				aria-label="Abrir menú de navegación"
				aria-expanded="false">
				<span
					id="menu-icon"
					set:html={menuIcon}
				/>
				<span
					id="close-icon"
					class="hidden"
					set:html={closeIcon}
				/>
			</button>
		</div>

		<!-- Menú móvil -->
		<div
			id="mobile-menu"
			class="max-h-0 overflow-hidden opacity-0 transition-all duration-300 lg:hidden">
			<div class="border-t border-gray-200 py-4 dark:border-gray-700">
				<nav aria-label="Navegación móvil">
					<ul class="space-y-2">
						<slot name="mobile" />
					</ul>
				</nav>

				<!-- Controles móviles -->
				<div class="mt-4 border-t border-gray-200 pt-4 dark:border-gray-700">
					<div class="flex items-center justify-center">
						<DarkMode />
					</div>
				</div>
			</div>
		</div>
	</div>
</nav>

<script>
	document.addEventListener('astro:page-load', () => {
		// Variables
		const navigation = document.querySelector('.modern-navigation')
		const mobileMenuToggle = document.getElementById('mobile-menu-toggle')
		const mobileMenu = document.getElementById('mobile-menu')
		const menuIcon = document.getElementById('menu-icon')
		const closeIcon = document.getElementById('close-icon')

		// Función para marcar elemento activo
		const setActiveMenuItem = () => {
			const currentPathname = window.location.pathname
			const menuLinks = navigation?.querySelectorAll('a:not([rel*="external"])')

			menuLinks?.forEach((link) => {
				const htmlLink = link as HTMLAnchorElement
				htmlLink.classList.remove('is-active')
				htmlLink.removeAttribute('aria-current')

				if (
					(currentPathname.includes(htmlLink.pathname.replaceAll('/', '')) &&
						htmlLink.textContent !== 'Inicio') ||
					(htmlLink.textContent === 'Inicio' && currentPathname === '/')
				) {
					htmlLink.classList.add('is-active')
					htmlLink.setAttribute('aria-current', 'page')
				}
			})
		}

		// Función para toggle del menú móvil
		const toggleMobileMenu = () => {
			const isOpen = mobileMenuToggle?.getAttribute('aria-expanded') === 'true'

			if (isOpen) {
				// Cerrar menú
				mobileMenuToggle.setAttribute('aria-expanded', 'false')
				mobileMenu?.classList.remove('max-h-96', 'opacity-100')
				mobileMenu?.classList.add('max-h-0', 'opacity-0')
				menuIcon?.classList.remove('hidden')
				closeIcon?.classList.add('hidden')
			} else {
				// Abrir menú
				mobileMenuToggle?.setAttribute('aria-expanded', 'true')
				mobileMenu?.classList.remove('max-h-0', 'opacity-0')
				mobileMenu?.classList.add('max-h-96', 'opacity-100')
				menuIcon?.classList.add('hidden')
				closeIcon?.classList.remove('hidden')
			}
		}

		// Event listeners
		mobileMenuToggle?.addEventListener('click', toggleMobileMenu)

		// Cerrar menú al hacer click en un enlace
		const mobileLinks = mobileMenu?.querySelectorAll('a')
		mobileLinks?.forEach((link) => {
			link.addEventListener('click', () => {
				toggleMobileMenu()
			})
		})

		// Cerrar menú al redimensionar a desktop
		window.addEventListener('resize', () => {
			if (window.innerWidth >= 1024) {
				mobileMenuToggle?.setAttribute('aria-expanded', 'false')
				mobileMenu?.classList.remove('max-h-96', 'opacity-100')
				mobileMenu?.classList.add('max-h-0', 'opacity-0')
				menuIcon?.classList.remove('hidden')
				closeIcon?.classList.add('hidden')
			}
		})

		// Efecto de scroll para la navegación
		let lastScrollY = window.scrollY
		window.addEventListener('scroll', () => {
			const currentScrollY = window.scrollY

			if (currentScrollY > lastScrollY && currentScrollY > 100) {
				// Scrolling down - hide nav
				navigation?.classList.add('-translate-y-full')
			} else {
				// Scrolling up - show nav
				navigation?.classList.remove('-translate-y-full')
			}

			lastScrollY = currentScrollY
		})

		// Inicializar
		setActiveMenuItem()
	})
</script>

<style>
	/* Estilos personalizados para la navegación moderna */
	.modern-navigation {
		transition: transform 0.3s ease-in-out;
	}

	/* Estilo para enlaces activos */
	:global(.modern-navigation .is-active) {
		@apply relative font-semibold text-unahur-primary;
	}

	:global(.modern-navigation .is-active::after) {
		content: '';
		position: absolute;
		bottom: -8px;
		left: 50%;
		transform: translateX(-50%);
		width: 100%;
		height: 2px;
		@apply bg-gradient-to-r from-unahur-primary to-unahur-secondary;
		border-radius: 1px;
	}

	/* Estilos para enlaces de navegación */
	:global(.modern-navigation nav a) {
		@apply rounded-lg px-3 py-2 font-medium text-gray-700 transition-colors duration-200 hover:bg-gray-100 hover:text-unahur-primary dark:text-gray-200 dark:hover:bg-gray-800 dark:hover:text-unahur-accent;
		text-decoration: none;
	}

	/* Estilos específicos para menú móvil */
	:global(.modern-navigation #mobile-menu nav a) {
		@apply block rounded-lg px-4 py-3 text-gray-700 transition-all duration-200 hover:bg-unahur-light hover:text-unahur-primary dark:text-gray-200 dark:hover:bg-gray-800 dark:hover:text-unahur-accent;
	}

	/* Mejorar la transición del menú móvil */
	#mobile-menu {
		transition: max-height 0.3s ease-in-out, opacity 0.3s ease-in-out;
	}

	/* Estilos responsivos */
	@media (max-width: 1023px) {
		.container {
			padding-left: 1rem;
			padding-right: 1rem;
		}
	}
</style>
